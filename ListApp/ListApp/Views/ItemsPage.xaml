<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:ListApp.ViewModels"
             xmlns:model="clr-namespace:ListApp.Models" 
             xmlns:behaviors="clr-namespace:ListApp.Behaviors"
             xmlns:converters="clr-namespace:ListApp.Converters"
             xmlns:sho="http://sharpnado.com"
             xmlns:fonts="clr-namespace:ListApp.Resources.Fonts"
             x:Class="ListApp.Views.ItemsPage"
             x:DataType="vm:ItemsViewModel"
             Title="{Binding Title}"
             BackgroundColor="{DynamicResource PageBackgroundColor}"
             x:Name="BrowseItemsPage">
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="⠪"
                     Order="Primary"
                     Command="{Binding ShareListCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="FA"
                                 Glyph="{x:Static fonts:FontAwesome6SolidIcons.ShareNodes}"
                                 Size="Medium"/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
        <ToolbarItem Order="Primary"
                     Command="{Binding DeleteListCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="FA"
                                 Glyph="{x:Static fonts:FontAwesome6SolidIcons.Trash}"
                                 Size="Medium"/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:CheckedTextConverter x:Key="checkedTextConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <StackLayout>
        <StackLayout VerticalOptions="FillAndExpand">
            <Entry x:Name="NewList"
                   Placeholder="Type here..."
                   ReturnType="Done"
                   Keyboard="Chat"
                   ClearButtonVisibility="WhileEditing"
                   ReturnCommandParameter="{x:Reference NewList}"
                   Text="{Binding NewItemText}"
                   TextColor="{DynamicResource SecondaryTextColor}"
                   PlaceholderColor="{DynamicResource SecondaryTextColor}">
                <Entry.Behaviors>
                    <behaviors:EventToCommandBehavior EventName="Unfocused" 
                                                      Command="{Binding AddItemCommand}"/>
                    <behaviors:EventToCommandBehavior EventName="Completed" 
                                                      Command="{Binding AddItemCompletedCommand}"
                                                      CommandParameter="{x:Reference NewList}"/>
                </Entry.Behaviors>
            </Entry>
            <RefreshView x:DataType="vm:ItemsViewModel" 
                         Command="{Binding LoadItemsCommand}" 
                         IsRefreshing="{Binding IsBusy, Mode=TwoWay}">
                <sho:CollectionView x:Name="ItemsListView"
                                    DragAndDropEndedCommand="{Binding ItemDragAndDropFinishedCommand}"
                                    EnableDragAndDrop="True"
                                    ItemHeight="50"
                                    ItemsSource="{Binding Items, Mode=TwoWay}">
                    <sho:CollectionView.ItemTemplate>
                        <DataTemplate>
                            <sho:DraggableViewCell>
                                <Grid x:Name="ItemsGrid"
                                      x:DataType="model:ListItem"
                                      ColumnDefinitions="10*,80*,10*"
                                      HorizontalOptions="FillAndExpand"
                                      Padding="2"
                                      Margin="0,0,0,-5">
                                    <Button Grid.Column="0"
                                            BackgroundColor="Transparent"
                                            TextColor="Black"
                                            BorderColor="Black"
                                            BorderWidth="1"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ItemsViewModel}}, Path=CompletionItemButtonCommand}"
                                            CommandParameter="{Binding Source={x:Reference LabelId}, Path=Text}"
                                            Text="{Binding Checked, Converter={StaticResource checkedTextConverter}}"
                                            Padding="0"
                                            Margin="2">
                                    </Button>
                                    <Entry Grid.Column="1"
                                           Margin="0"
                                           Text="{Binding Text}"
                                           TextColor="{DynamicResource SecondaryTextColor}">
                                        <Entry.Triggers>
                                            <DataTrigger TargetType="Entry"
                                                         Binding="{Binding Checked}"
                                                         Value="True">
                                                <Setter Property="TextColor" Value="{DynamicResource DisabledTextColor}"/>
                                            </DataTrigger>
                                        </Entry.Triggers>
                                    </Entry>
                                    <Button Grid.Column="2"
                                            BackgroundColor="Transparent"
                                            FontFamily="FA"
                                            Text="{x:Static fonts:FontAwesome6SolidIcons.Trash}"
                                            TextColor="{DynamicResource PrimaryTextColor}"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ItemsViewModel}}, Path=DeleteItemCommand}"
                                            CommandParameter="{Binding Source={x:Reference LabelId}, Path=Text}"
                                            Margin="0">
                                    </Button>
                                    <Label x:Name="LabelId" 
                                           Text="{Binding Id}"
                                           IsVisible="False"/>
                                </Grid>
                            </sho:DraggableViewCell>
                        </DataTemplate>
                    </sho:CollectionView.ItemTemplate>
                </sho:CollectionView>
            </RefreshView>
        </StackLayout>
    </StackLayout>

</ContentPage>
