<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:ListApp.ViewModels"
             xmlns:model="clr-namespace:ListApp.Models"
             xmlns:behaviors="clr-namespace:ListApp.Behaviors"
             xmlns:converters="clr-namespace:ListApp.Converters"
             xmlns:sho="http://sharpnado.com"
             xmlns:fonts="clr-namespace:ListApp.Resources.Fonts"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             x:Class="ListApp.Views.ItemsPage"
             x:DataType="vm:ItemsViewModel"
             Title="{Binding Title}"
             BackgroundColor="{DynamicResource PageBackgroundColor}"
             x:Name="BrowseItemsPage">
    <ContentPage.ToolbarItems>
        <ToolbarItem Order="Primary"
                     Command="{Binding ShareListCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="FA"
                                 Glyph="{x:Static fonts:FontAwesome6SolidIcons.ShareNodes}"
                                 Size="Medium"/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
        <ToolbarItem Order="Primary"
                     Command="{Binding DeleteListCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="FA"
                                 Glyph="{x:Static fonts:FontAwesome6SolidIcons.Trash}"
                                 Size="Medium"/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:CheckedTextConverter x:Key="checkedTextConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <StackLayout VerticalOptions="FillAndExpand">
        <Entry x:Name="NewList"
               AutomationId="TypeHereEntry"
               Placeholder="{xct:Translate PageListItemsTopEntryPlaceholder}"
               ReturnType="Done"
               Keyboard="Chat"
               IsEnabled="{Binding IsDeletedList, Converter={StaticResource InvertedBoolConverter}}"
               ClearButtonVisibility="WhileEditing"
               ReturnCommandParameter="{x:Reference NewList}"
               Text="{Binding NewItemText}"
               TextColor="{DynamicResource SecondaryTextColor}"
               PlaceholderColor="{DynamicResource SecondaryTextColor}">
            <Entry.Behaviors>
                <behaviors:EventToCommandBehavior EventName="Unfocused" 
                                                  Command="{Binding AddItemCommand}"/>
                <behaviors:EventToCommandBehavior EventName="Completed" 
                                                  Command="{Binding AddItemCompletedCommand}"
                                                  CommandParameter="{x:Reference NewList}"/>
            </Entry.Behaviors>
        </Entry>
        <ScrollView VerticalOptions="FillAndExpand">
            <sho:CollectionView x:Name="ItemsListView"
                                DragAndDropEndedCommand="{Binding ItemDragAndDropFinishedCommand}"
                                EnableDragAndDrop="{Binding IsDeletedList, Converter={StaticResource InvertedBoolConverter}}"
                                DisableScroll="False"
                                ItemHeight="50"
                                VerticalOptions="FillAndExpand"
                                ItemsSource="{Binding Items, Mode=TwoWay}">
                <sho:CollectionView.ItemTemplate>
                    <DataTemplate>
                        <sho:DraggableViewCell>
                            <Grid x:Name="ItemsGrid"
                                  x:DataType="model:ListItem"
                                  ColumnDefinitions="10*,80*,10*"
                                  HorizontalOptions="FillAndExpand"
                                  Padding="2"
                                  Margin="0,0,0,-5">
                                <Button Grid.Column="0"
                                        BackgroundColor="Transparent"
                                        TextColor="Black"
                                        BorderColor="Black"
                                        BorderWidth="1"
                                        Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ItemsViewModel}}, Path=CompletionItemButtonCommand}"
                                        CommandParameter="{Binding Source={x:Reference LabelId}, Path=Text}"
                                        IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type vm:ItemsViewModel}}, Path=IsDeletedList, Converter={StaticResource InvertedBoolConverter}}"
                                        Text="{Binding Checked, Converter={StaticResource checkedTextConverter}}"
                                        Padding="0"
                                        Margin="2">
                                </Button>
                                <Entry x:Name="ListItemDescriptionEntry" 
                                       Grid.Column="1"
                                       Margin="0"
                                       Keyboard="Chat"
                                       IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type vm:ItemsViewModel}}, Path=IsDeletedList, Converter={StaticResource InvertedBoolConverter}}"
                                       Completed="ListItemDescriptionEntry_Completed"
                                       Text="{Binding Text}"
                                       TextColor="{DynamicResource SecondaryTextColor}">
                                    <Entry.Triggers>
                                        <DataTrigger TargetType="Entry"
                                                     Binding="{Binding Checked}"
                                                     Value="True">
                                            <Setter Property="TextColor" Value="{DynamicResource DisabledTextColor}"/>
                                        </DataTrigger>
                                    </Entry.Triggers>
                                </Entry>
                                <Button Grid.Column="2"
                                        BackgroundColor="Transparent"
                                        IsVisible="{Binding Source={RelativeSource AncestorType={x:Type vm:ItemsViewModel}}, Path=IsDeletedList, Converter={StaticResource InvertedBoolConverter}}"
                                        FontFamily="FA"
                                        Text="{x:Static fonts:FontAwesome6SolidIcons.Trash}"
                                        TextColor="{DynamicResource PrimaryColor}"
                                        Command="{Binding Source={RelativeSource AncestorType={x:Type vm:ItemsViewModel}}, Path=DeleteItemCommand}"
                                        CommandParameter="{Binding Source={x:Reference LabelId}, Path=Text}"
                                        Margin="0">
                                </Button>
                                <Label x:Name="LabelId" 
                                       Text="{Binding Id}"
                                       IsVisible="False"/>
                            </Grid>
                        </sho:DraggableViewCell>
                    </DataTemplate>
                </sho:CollectionView.ItemTemplate>
            </sho:CollectionView>
        </ScrollView>
        <StackLayout BackgroundColor="{DynamicResource SecondaryColor}">
            <Button Text="{xct:Translate PageListItemsRestoreButtonText}"
                    TextColor="{DynamicResource PrimaryTextColor}"
                    IsVisible="{Binding IsDeletedList}"
                    Margin="20"
                    CornerRadius="50"
                    BackgroundColor="{DynamicResource PrimaryColor}"
                    Command="{Binding RestoreListFromTrashBin}" >
                <Button.ImageSource>
                    <FontImageSource FontFamily="FA"
                                     Color="{DynamicResource PrimaryTextColor}"
                                     Glyph="{x:Static fonts:FontAwesome6SolidIcons.ArrowRotateLeft}"
                                     Size="Medium"/>
                </Button.ImageSource>
            </Button>
        </StackLayout>
    </StackLayout>
</ContentPage>
